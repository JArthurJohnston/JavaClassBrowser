/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPanels;

import Models.ClassModel;
import Models.MethodModel;
import Types.ClassType;
import UIModels.SystemBrowserShellModel;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Arthur
 */
public class MethodPanel extends BasePanel {
    private SystemBrowserShellModel model;
    private final int INITIAL_WIDTH = 150;
    private final int INITIAL_HEIGHT = 250;

    /**
     * Creates new form MethodPanel
     */
    public MethodPanel() {
        initComponents();
    }
    
    public void initializeWithModel(SystemBrowserShellModel model){
        this.model = model;
        this.setUpLists();
        if(model.getSelectedClass() != null)
            this.fillListsFromClass(model.getSelectedClass());
    }
    
    private void fillListsFromClass(ClassModel aClass){
        for(MethodModel m : aClass.getMethods()){
            if(m.getType() == ClassType.CLASS)
                ((DefaultListModel)staticMethodList.getModel()).addElement(m);
            if(m.getType() == ClassType.INSTANCE)
                ((DefaultListModel)instanceMethodList.getModel()).addElement(m);
        }
    }
    
    @Override
    protected LinkedList<JList> myLists(){
        LinkedList aLists = new LinkedList();
        aLists.add(this.staticMethodList);
        aLists.add(this.instanceMethodList);
        return aLists;
    }
    
    @Override
    protected void updateModel(JList aList){
        model.setSelected((MethodModel)aList.getSelectedValue());
        clearOtherLists(aList);
    }
    
    private void clearOtherLists(JList aList){
        if(this.staticMethodList != aList)
            this.staticMethodList.clearSelection();
        if(this.instanceMethodList != aList)
            this.instanceMethodList.clearSelection();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        instanceMethodList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        staticMethodList = new javax.swing.JList();

        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(150, 250));

        jScrollPane1.setViewportView(instanceMethodList);

        jTabbedPane1.addTab("Instance Methods", jScrollPane1);

        jScrollPane2.setViewportView(staticMethodList);

        jTabbedPane1.addTab("Static Methods", jScrollPane2);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList instanceMethodList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList staticMethodList;
    // End of variables declaration//GEN-END:variables
}
