/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UIPanels;

import Models.BaseModel;
import Models.ClassModel;
import Models.VariableModel;
import Types.ClassType;
import UIModels.BrowserUIController;
import java.util.LinkedList;
import javax.swing.JTable;

/**
 *
 * @author arthur
 */
public class VariableListPanel extends BaseListPanel {
    private ClassType type;

    /**
     * Creates new form VariableListPanel
     */
    public VariableListPanel() {
        initComponents();
        this.setUpTable();
    }
    
    public void setSelectionType(ClassType aType){
        this.type = aType;
    }
    
    @Override
    public JTable table(){
        return variableTable;
    }
    
    public void addVariableToList(VariableModel aVar){
        this.tableModel(variableTable).addRow(
                new CellModel[] 
                   {new CellModel(aVar.scopeString(), aVar), 
                    new CellModel(aVar.getObjectType().name(), aVar),
                    new CellModel(aVar.getType().toString().toLowerCase(), aVar)});
    }
    
     @Override
    public void setModel(BrowserUIController controller){
        super.setModel(controller);
        if(controller.getSelectedClass() != null)
            this.fillListFromClass(controller.getSelectedClass());
    }
    
    private void fillListFromClass(ClassModel aModel){
        if(aModel == null)
            return;
        this.clear();
        if(this.type == ClassType.INSTANCE)
            this.fillListFromList(aModel.getInstanceVars());
        if(this.type == ClassType.STATIC)
            this.fillListFromList(aModel.getStaticVars());
    }
    
    private void fillListFromList(LinkedList<VariableModel> aList){
        for(VariableModel m : aList)
            if(m.getType() == this.type)
                this.addVariableToList(m);
    }
    
    @Override
    public void selectionChanged(BaseModel aModel){
        if(aModel.isClass())
            this.fillListFromClass((ClassModel)aModel);
    }
    
    @Override
    public void modelAdded(BaseModel aModel){
        if(this.checkModel(aModel))
            this.addVariableToList((VariableModel)aModel);
    }
    @Override
    protected boolean checkModel(BaseModel aModel){
        if(super.checkModel(aModel)) 
            if(aModel.isVariable())
                if(((VariableModel)aModel).getType() == this.type)
                    if(((VariableModel)aModel).getParent() == controller.getSelectedClass())
                        return true;
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        variableTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        variableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scope", "Name", "Type"
            }
        ));
        jScrollPane1.setViewportView(variableTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable variableTable;
    // End of variables declaration//GEN-END:variables
}
